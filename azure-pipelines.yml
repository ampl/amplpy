variables:
  CIBW_SKIP: pp* cp27-* *_i686 *-win32 *musllinux*
  CIBW_ARCHS_MACOS: x86_64 universal2
  CIBW_TEST_COMMAND: python -m amplpy.tests
  CIBW_TEST_REQUIRES: --index-url https://pypi.ampl.com --extra-index-url https://pypi.org/simple ampl_module_base ampl_module_highs ampl_module_gurobi pandas numpy
  CIBW_TEST_REQUIRES_AARCH64: --index-url https://pypi.ampl.com --extra-index-url https://pypi.org/simple ampl_module_base ampl_module_highs
  CIBW_TEST_REQUIRES_PPC64LE: --index-url https://pypi.ampl.com --extra-index-url https://pypi.org/simple ampl_module_base

stages:
- stage: native
  displayName: 'Build native'
  jobs:
  - job: docs
    pool: {vmImage: 'Ubuntu-20.04'}
    steps:
      - task: UsePythonVersion@0
      - bash: |
          set -ex
          python dev/updatelib.py
          python -m pip install setuptools cython
          python -m pip install .
          python setup.py sdist -d upload
          cd docs
          pip install -r requirements-dev.txt --upgrade
          make html
          cd ..
          mkdir -p upload/doc
          cp -r docs/build/html upload/doc/python
        displayName: Build documentation
      - task: PublishBuildArtifacts@1
        inputs: {pathtoPublish: 'upload'}
  - job: manylinux
    pool: {vmImage: 'Ubuntu-20.04'}
    steps:
      - task: UsePythonVersion@0
      - bash: |
          set -ex
          python dev/updatelib.py
          python -m pip install --upgrade cibuildwheel==2.21.3
          cibuildwheel --platform linux --output-dir wheelhouse .
        displayName: Build wheels
      - task: PublishBuildArtifacts@1
        inputs: {pathtoPublish: 'wheelhouse'}
  - job: macos
    pool: {vmImage: 'macos-latest'}
    steps:
      - task: UsePythonVersion@0
      - bash: |
          set -ex
          python dev/updatelib.py
          python -m pip install --upgrade cibuildwheel==2.21.3
          cibuildwheel --platform macos --output-dir wheelhouse .
        displayName: Build wheels
      - task: PublishBuildArtifacts@1
        inputs: {pathtoPublish: 'wheelhouse'}
  - job: windows
    pool: {vmImage: 'windows-2022'}
    steps:
      - task: UsePythonVersion@0
      - bash: |
          set -ex
          python dev/updatelib.py
          python -m pip install --upgrade cibuildwheel==2.21.3
          cibuildwheel --platform windows --output-dir wheelhouse .
        displayName: Build wheels
      - task: PublishBuildArtifacts@1
        inputs: {pathtoPublish: 'wheelhouse'}

- stage: qemu
  displayName: 'Build with QEMU'
  jobs:
  - job: qemu
    pool: {vmImage: 'Ubuntu-20.04'}
    strategy:
      matrix:
        aarch64 cp36:
          CIBW_BUILD: cp36-*
          CIBW_ARCHS_LINUX: aarch64
          CIBW_TEST_REQUIRES: $(CIBW_TEST_REQUIRES_AARCH64)
        aarch64 cp37:
          CIBW_BUILD: cp37-*
          CIBW_ARCHS_LINUX: aarch64
          CIBW_TEST_REQUIRES: $(CIBW_TEST_REQUIRES_AARCH64)
        aarch64 cp38:
          CIBW_BUILD: cp38-*
          CIBW_ARCHS_LINUX: aarch64
          CIBW_TEST_REQUIRES: $(CIBW_TEST_REQUIRES_AARCH64)
        aarch64 cp39:
          CIBW_BUILD: cp39-*
          CIBW_ARCHS_LINUX: aarch64
          CIBW_TEST_REQUIRES: $(CIBW_TEST_REQUIRES_AARCH64)
        aarch64 cp310:
          CIBW_BUILD: cp310-*
          CIBW_ARCHS_LINUX: aarch64
          CIBW_TEST_REQUIRES: $(CIBW_TEST_REQUIRES_AARCH64)
        aarch64 cp311:
          CIBW_BUILD: cp311-*
          CIBW_ARCHS_LINUX: aarch64
          CIBW_TEST_REQUIRES: $(CIBW_TEST_REQUIRES_AARCH64)
        aarch64 cp312:
          CIBW_BUILD: cp312-*
          CIBW_ARCHS_LINUX: aarch64
          CIBW_TEST_REQUIRES: $(CIBW_TEST_REQUIRES_AARCH64)
        aarch64 cp313:
          CIBW_BUILD: cp313-*
          CIBW_ARCHS_LINUX: aarch64
          CIBW_TEST_REQUIRES: $(CIBW_TEST_REQUIRES_AARCH64)
    steps:
      - task: UsePythonVersion@0
      - bash: docker run --rm --privileged docker.io/tonistiigi/binfmt:qemu-v8.1.5 --install all
        displayName: Configure qemu (temp solution until qemu fix)
      - bash: |
          set -ex
          python dev/updatelib.py
          python -m pip install --upgrade cibuildwheel==2.21.3
          cibuildwheel --platform linux --output-dir wheelhouse .
        displayName: Build wheels
      - task: PublishBuildArtifacts@1
        inputs: {pathtoPublish: 'wheelhouse'}

- stage: publish
  jobs:
    - job: upload
      pool: {vmImage: 'ubuntu-latest'}
      steps:
        - task: DownloadBuildArtifacts@0
          inputs:
              buildType: 'current'
              downloadPath: 'artifacts/'
              artifactName: 'drop'
          displayName: 'Download current pipeline artifacts'
        - bash: mv artifacts/drop artifacts/amplpy
          displayName: Rename directory
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: 'artifacts/'
            artifact: 'release'
            artifactType: 'pipeline'
